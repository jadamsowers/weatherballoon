# Makefile.in generated by automake 1.9.5 from Makefile.am.
# soundcard/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(libaudioio_a_SOURCES) $(libcommon_a_SOURCES) $(liblog_a_SOURCES) $(libpttio_a_SOURCES) $(chansim_SOURCES) $(chansimberr_SOURCES) $(soundmodem_SOURCES) $(testkiss_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/soundmodem
pkglibdir = $(libdir)/soundmodem
pkgincludedir = $(includedir)/soundmodem
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
sbin_PROGRAMS = $(am__EXEEXT_2)
noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = soundcard
DIST_COMMON = $(include_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libaudioio_a_AR = $(AR) $(ARFLAGS)
libaudioio_a_LIBADD =
am__libaudioio_a_SOURCES_DIST = audioio.c alsaio.c audiofilein.c \
	chansim.c winaudioio.c
am_libaudioio_a_OBJECTS = audioio.$(OBJEXT) \
	alsaio.$(OBJEXT) audiofilein.$(OBJEXT) \
	chansim.$(OBJEXT)
#am_libaudioio_a_OBJECTS = winaudioio.$(OBJEXT) \
#	audiofilein.$(OBJEXT) chansim.$(OBJEXT)
libaudioio_a_OBJECTS = $(am_libaudioio_a_OBJECTS)
libcommon_a_AR = $(AR) $(ARFLAGS)
libcommon_a_LIBADD =
am_libcommon_a_OBJECTS = simd.$(OBJEXT) snprintpkt.$(OBJEXT)
libcommon_a_OBJECTS = $(am_libcommon_a_OBJECTS)
liblog_a_AR = $(AR) $(ARFLAGS)
liblog_a_LIBADD =
am__liblog_a_SOURCES_DIST = log.c winlog.c
am_liblog_a_OBJECTS = log.$(OBJEXT)
#am_liblog_a_OBJECTS = winlog.$(OBJEXT)
liblog_a_OBJECTS = $(am_liblog_a_OBJECTS)
libpttio_a_AR = $(AR) $(ARFLAGS)
libpttio_a_LIBADD =
am__libpttio_a_SOURCES_DIST = ptt.c winptt2.c
am_libpttio_a_OBJECTS = ptt.$(OBJEXT)
#am_libpttio_a_OBJECTS = winptt2.$(OBJEXT)
libpttio_a_OBJECTS = $(am_libpttio_a_OBJECTS)
am__EXEEXT_1 = testkiss$(EXEEXT) chansim$(EXEEXT) \
	chansimberr$(EXEEXT)
am__EXEEXT_2 = soundmodem$(EXEEXT)
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)" \
	"$(DESTDIR)$(includedir)"
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_chansim_OBJECTS = simd.$(OBJEXT) pktsimple.$(OBJEXT) main.$(OBJEXT)
chansim_OBJECTS = $(am_chansim_OBJECTS)
am__DEPENDENCIES_1 = ../afsk/libafsk.a ../fsk/libfsk.a \
	../pammodem/libpam.a ../pskmodem/libpsk.a \
	../newqpsk/libnewqpsk.a ../p3dmodem/libp3d.a
chansim_DEPENDENCIES = $(am__DEPENDENCIES_1) liblog.a libaudioio.a \
	libpttio.a ../matlib/libmat.a ../libmisc/libmisc.a
am_chansimberr_OBJECTS = simd.$(OBJEXT) pktberr.$(OBJEXT) \
	main.$(OBJEXT)
chansimberr_OBJECTS = $(am_chansimberr_OBJECTS)
chansimberr_DEPENDENCIES = $(am__DEPENDENCIES_1) liblog.a libaudioio.a \
	libpttio.a ../matlib/libmat.a ../libmisc/libmisc.a
am_soundmodem_OBJECTS = kisspkt.$(OBJEXT) main.$(OBJEXT)
soundmodem_OBJECTS = $(am_soundmodem_OBJECTS)
soundmodem_DEPENDENCIES = $(am__DEPENDENCIES_1) libcommon.a liblog.a \
	libaudioio.a libpttio.a ../matlib/libmat.a \
	../libmisc/libmisc.a
am_testkiss_OBJECTS = kisspkt.$(OBJEXT) testkiss.$(OBJEXT) \
	log.$(OBJEXT) snprintpkt.$(OBJEXT)
testkiss_OBJECTS = $(am_testkiss_OBJECTS)
testkiss_DEPENDENCIES = ../libmisc/libmisc.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libaudioio_a_SOURCES) $(libcommon_a_SOURCES) \
	$(liblog_a_SOURCES) $(libpttio_a_SOURCES) $(chansim_SOURCES) \
	$(chansimberr_SOURCES) $(soundmodem_SOURCES) \
	$(testkiss_SOURCES)
DIST_SOURCES = $(am__libaudioio_a_SOURCES_DIST) $(libcommon_a_SOURCES) \
	$(am__liblog_a_SOURCES_DIST) $(am__libpttio_a_SOURCES_DIST) \
	$(chansim_SOURCES) $(chansimberr_SOURCES) \
	$(soundmodem_SOURCES) $(testkiss_SOURCES)
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jadam/soundmodem-0.10/missing --run aclocal-1.9
ALLOCA = 
ALSA_CFLAGS = 
ALSA_LIBS =  -lasound -lm -ldl -lpthread
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jadam/soundmodem-0.10/missing --run tar
AR = ar
AS = as
AUDIOFILE_CFLAGS = 
AUDIOFILE_CONFIG = no
AUDIOFILE_LIBS = 
AUTOCONF = ${SHELL} /home/jadam/soundmodem-0.10/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jadam/soundmodem-0.10/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jadam/soundmodem-0.10/missing --run automake-1.9
AWK = gawk
BUILD_INCLUDED_LIBINTL = no
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -O2
CPP = gcc -E
CPPFLAGS = 
CROSSCOMP_FALSE = 
CROSSCOMP_TRUE = #
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRECTX_FALSE = 
DIRECTX_TRUE = #
DLLTOOL = dlltool
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GENCAT = gencat
GLIBC2 = yes
GLIBC21 = yes
GMSGFMT = :
GTK_CFLAGS = -I/usr/include/gtk-1.2 -I/usr/include/glib-1.2 -I/usr/lib/glib/include
GTK_CONFIG = /usr/bin/gtk-config
GTK_LIBS = -L/usr/lib -lgtk -lgdk -rdynamic -lgmodule -lglib -ldl -lXi -lXext -lX11 -lm
HAVE_ALSA = 
HAVE_ASPRINTF = 1
HAVE_BITTYPES = 
HAVE_DIRECTX = 
HAVE_IFRNEWNAME = 
HAVE_MKISS = 
HAVE_POSIX_PRINTF = 1
HAVE_SNPRINTF = 1
HAVE_WPRINTF = 0
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = :
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
INTL_MACOSX_LIBS = 
LD = ld
LDFLAGS = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lasound -lm -ldl -lpthread -lm
LIBTHREAD =  -lpthread -lutil 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jadam/soundmodem-0.10/missing --run makeinfo
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = :
MSGMERGE = :
M_PI = 
OBJEXT = o
PACKAGE = soundmodem
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
POSUB = po
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USEMMX = 
USEMMX_FALSE = 
USEMMX_TRUE = #
USEVIS = 
USEVIS_FALSE = 
USEVIS_TRUE = #
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 0.10
WIN32 = 
WIN32_FALSE = 
WIN32_TRUE = #
WINDRES = i686-pc-cygwin-windres
XGETTEXT = :
XMLCFLAGS = -I/usr/include/gnome-xml
XMLLIBS = -L/usr/lib -lxml -lz
XML_CONFIG = /usr/bin/xml-config
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/jadam/soundmodem-0.10/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
INCLUDES = -I/usr/include/gnome-xml -I$(top_srcdir)/matlib -I$(top_srcdir)/libmisc \
        -I$(top_srcdir)/directx/include \
        -I$(top_srcdir)/directx/include/directx6 \
	

MODEMLIBS = ../afsk/libafsk.a ../fsk/libfsk.a ../pammodem/libpam.a ../pskmodem/libpsk.a ../newqpsk/libnewqpsk.a ../p3dmodem/libp3d.a
man_MANS = soundmodem.8
SBINPROG = soundmodem
#SBINPROG = 
NOINSTPROG = testkiss chansim chansimberr
#NOINSTPROG = 
libpttio_a_SOURCES = ptt.c
#libpttio_a_SOURCES = winptt2.c
libaudioio_a_SOURCES = audioio.c alsaio.c audiofilein.c chansim.c
#libaudioio_a_SOURCES = winaudioio.c audiofilein.c chansim.c
liblog_a_SOURCES = log.c
#liblog_a_SOURCES = winlog.c
include_HEADERS = modem.h simd.h
noinst_HEADERS = ppdev.h soundio.h audioio.h kisspkt.h pttio.h
noinst_LIBRARIES = libcommon.a libpttio.a libaudioio.a liblog.a
libcommon_a_SOURCES = simd.c snprintpkt.c
soundmodem_SOURCES = kisspkt.c main.c
soundmodem_LDADD = $(MODEMLIBS) libcommon.a liblog.a libaudioio.a libpttio.a ../matlib/libmat.a ../libmisc/libmisc.a -L/usr/lib -lxml -lz  -lpthread -lutil  
testkiss_SOURCES = kisspkt.c testkiss.c log.c snprintpkt.c
testkiss_LDADD = ../libmisc/libmisc.a  -lpthread -lutil 
chansim_SOURCES = simd.c pktsimple.c main.c
chansim_LDADD = $(MODEMLIBS) liblog.a libaudioio.a libpttio.a ../matlib/libmat.a ../libmisc/libmisc.a -L/usr/lib -lxml -lz  -lpthread -lutil  
chansimberr_SOURCES = simd.c pktberr.c main.c
chansimberr_LDADD = $(MODEMLIBS) liblog.a libaudioio.a libpttio.a ../matlib/libmat.a ../libmisc/libmisc.a -L/usr/lib -lxml -lz  -lpthread -lutil  
EXTRA_DIST = test.xml audioio.c audiofilein.c chansim.c winaudioio.c ptt.c winptt.c winptt2.c log.c winlog.c soundmodem.8
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  soundcard/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  soundcard/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libaudioio.a: $(libaudioio_a_OBJECTS) $(libaudioio_a_DEPENDENCIES) 
	-rm -f libaudioio.a
	$(libaudioio_a_AR) libaudioio.a $(libaudioio_a_OBJECTS) $(libaudioio_a_LIBADD)
	$(RANLIB) libaudioio.a
libcommon.a: $(libcommon_a_OBJECTS) $(libcommon_a_DEPENDENCIES) 
	-rm -f libcommon.a
	$(libcommon_a_AR) libcommon.a $(libcommon_a_OBJECTS) $(libcommon_a_LIBADD)
	$(RANLIB) libcommon.a
liblog.a: $(liblog_a_OBJECTS) $(liblog_a_DEPENDENCIES) 
	-rm -f liblog.a
	$(liblog_a_AR) liblog.a $(liblog_a_OBJECTS) $(liblog_a_LIBADD)
	$(RANLIB) liblog.a
libpttio.a: $(libpttio_a_OBJECTS) $(libpttio_a_DEPENDENCIES) 
	-rm -f libpttio.a
	$(libpttio_a_AR) libpttio.a $(libpttio_a_OBJECTS) $(libpttio_a_LIBADD)
	$(RANLIB) libpttio.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(mkdir_p) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
chansim$(EXEEXT): $(chansim_OBJECTS) $(chansim_DEPENDENCIES) 
	@rm -f chansim$(EXEEXT)
	$(LINK) $(chansim_LDFLAGS) $(chansim_OBJECTS) $(chansim_LDADD) $(LIBS)
chansimberr$(EXEEXT): $(chansimberr_OBJECTS) $(chansimberr_DEPENDENCIES) 
	@rm -f chansimberr$(EXEEXT)
	$(LINK) $(chansimberr_LDFLAGS) $(chansimberr_OBJECTS) $(chansimberr_LDADD) $(LIBS)
soundmodem$(EXEEXT): $(soundmodem_OBJECTS) $(soundmodem_DEPENDENCIES) 
	@rm -f soundmodem$(EXEEXT)
	$(LINK) $(soundmodem_LDFLAGS) $(soundmodem_OBJECTS) $(soundmodem_LDADD) $(LIBS)
testkiss$(EXEEXT): $(testkiss_OBJECTS) $(testkiss_DEPENDENCIES) 
	@rm -f testkiss$(EXEEXT)
	$(LINK) $(testkiss_LDFLAGS) $(testkiss_OBJECTS) $(testkiss_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alsaio.Po
include ./$(DEPDIR)/audiofilein.Po
include ./$(DEPDIR)/audioio.Po
include ./$(DEPDIR)/chansim.Po
include ./$(DEPDIR)/kisspkt.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/pktberr.Po
include ./$(DEPDIR)/pktsimple.Po
include ./$(DEPDIR)/ptt.Po
include ./$(DEPDIR)/simd.Po
include ./$(DEPDIR)/snprintpkt.Po
include ./$(DEPDIR)/testkiss.Po
include ./$(DEPDIR)/winaudioio.Po
include ./$(DEPDIR)/winlog.Po
include ./$(DEPDIR)/winptt2.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:
install-man8: $(man8_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man8dir)" || $(mkdir_p) "$(DESTDIR)$(man8dir)"
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    8*) ;; \
	    *) ext='8' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst"; \
	done
uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    8*) ;; \
	    *) ext='8' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man8dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man8dir)/$$inst"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(MANS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS install-man

install-exec-am: install-sbinPROGRAMS

install-info: install-info-am

install-man: install-man8

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am uninstall-man \
	uninstall-sbinPROGRAMS

uninstall-man: uninstall-man8

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS clean-sbinPROGRAMS \
	ctags distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-includeHEADERS install-info \
	install-info-am install-man install-man8 install-sbinPROGRAMS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-info-am uninstall-man uninstall-man8 \
	uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
